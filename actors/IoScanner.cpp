//
// Created by Benjamin van Seggelen
//
#include <string>
#include "utils/Logger.h"

#include "DiscoveryManager.h"
#include "SessionInfo.h"

using eipScanner::DiscoveryManager;
using eipScanner::IdentityItem;
using eipScanner::SessionInfo;
using eipScanner::utils::Logger;
using eipScanner::utils::LogLevel;

int main()
{
  Logger::setLogLevel(LogLevel::DEBUG);
  IdentityItem::Vec devices;
  while (devices.size() == 0)
  {
    DiscoveryManager discoveryManager("172.28.255.255", 0xAF12, std::chrono::seconds(5));
    devices = discoveryManager.discover();
  }

  if (devices.size() > 1)
  {
    Logger(LogLevel::ERROR) << "Expected 1 device, not more or less.";
    return EXIT_FAILURE;
  }

  auto si = std::make_shared<SessionInfo>(devices.at(0).socketAddress.getHost(), 0xAF12);

  // TODO: set up implicit messaging

  return EXIT_SUCCESS;
}
